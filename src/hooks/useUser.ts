// src/hooks/useUser.ts
import { useQuery } from "@tanstack/react-query";
import API from "@/lib/axios";
import { User } from '@/types/user';
import axios from 'axios';

export function useUser() {
  const {
    data: user,
    isLoading: loading,
    isError,
    error,
    refetch,
  } = useQuery<User, Error>({
    queryKey: ["currentUser"],
    queryFn: async () => {
      try {
        const response = await API.get<User>("/api/getuserbyJWT");
        return response.data;
      } catch (e) {
        // üí° –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è: –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ 401, –Ω–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –µ–µ –¥–∞–ª—å—à–µ.
        if (axios.isAxiosError(e) && e.response?.status === 401) {
          // –ï—Å–ª–∏ —ç—Ç–æ –æ–∂–∏–¥–∞–µ–º–∞—è –æ—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º null.
          return null;
        }
        // –ï—Å–ª–∏ —ç—Ç–æ –¥—Ä—É–≥–∞—è, –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞, –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –µ–µ.
        throw e;
      }
    },
    staleTime: 1000 * 60 * 60,
    refetchOnMount: false,
    refetchOnWindowFocus: true,
    // –û—Ç–∫–ª—é—á–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –¥–ª—è –æ—à–∏–±–æ–∫ 401, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∏ —Ç–µ–ø–µ—Ä—å –Ω–µ —Å—á–∏—Ç–∞—é—Ç—Å—è –æ—à–∏–±–∫–∞–º–∏.
    retry: false,
  });

  return {
    user: user ?? null,
    loading,
    error: isError ? error.message : null,
    refetchUser: refetch,
  };
}