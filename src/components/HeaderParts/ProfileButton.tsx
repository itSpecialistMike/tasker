// tasker/src/components/ProfileButton.tsx
// –£–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ —ç—Ç–æ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –∫–ª–∏–µ–Ω—Ç–∞.
"use client";

import Link from "next/link"; // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç Next.js –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.
import { useState } from "react"; // –•—É–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º.
import { AnimatePresence, motion } from "framer-motion"; // –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ UI.
import { ChevronDown, LogOut, User as UserIcon, UserPlus } from "lucide-react"; // –ò–º–ø–æ—Ä—Ç –∏–∫–æ–Ω–æ–∫.
import { useRouter } from 'next/navigation'; // –•—É–∫ Next.js –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.
import { useUserContext } from "@/context/UserContext"; // –ò–º–ø–æ—Ä—Ç –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ —Ö—É–∫–∞ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
import useLogout from "@/hooks/useLogout";
import { useQueryClient } from "@tanstack/react-query";
import { useTasks } from "@/hooks/useTasks"; // üëà –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ö—É–∫ useTasks
import { useDashboard } from "@/hooks/useDashboard"; // üëà –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ö—É–∫ useDashboard

const ProfileButton = () => {
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç—å—é –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é.
    const [isOpen, setIsOpen] = useState(false);
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.
    const router = useRouter();
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.
    const { user, loading } = useUserContext();
    const logout = useLogout();
    const queryClient = useQueryClient();

    // üí° –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ refetch –∏–∑ —Ö—É–∫–∞ useDashboard
    const { refetchDashboards } = useDashboard();
    // üí° –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ refetch –∏–∑ —Ö—É–∫–∞ useTasks
    const { refetch: refetchTasks } = useTasks();

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é.
    const handleClose = () => setIsOpen(false);

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã.
     */
    const handleLogout = async () => {
        try {
            await logout();

            // –Ø–≤–Ω–æ –æ—á–∏—â–∞–µ–º –∫—ç—à –∑–∞–ø—Ä–æ—Å–∞ "currentUser"
            queryClient.setQueryData(["currentUser"], null);

            // –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–µ—Ñ–µ—Ç—á –¥–ª—è –¥–∞—à–±–æ—Ä–¥–æ–≤ –∏ –∑–∞–¥–∞—á.
            // –≠—Ç–æ –æ–±–Ω–æ–≤–∏—Ç –∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –Ω–æ–≤—ã–º —Å—Ç–∞—Ç—É—Å–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω).
            // –ó–∞–ø—Ä–æ—Å—ã –≤ useTasks –∏ useFetchDashboards –Ω–µ –±—É–¥—É—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω—ã, –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.
            refetchDashboards();
            refetchTasks();

            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é
            handleClose();

            // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
            // router.push('/');
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã", error);
        }
    };

    // --- –õ–æ–≥–∏–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è ---
    if (loading) {
        return <div className="w-10 h-10 rounded-full bg-gray-200 animate-pulse" />;
    }

    if (user) {
        return (
            <div className="relative inline-block text-left">
                <button
                    onClick={() => setIsOpen(!isOpen)}
                    className="flex items-center gap-2 px-4 py-2 rounded-full bg-indigo-900 text-white hover:bg-indigo-700 transition-colors transform duration-300"
                    aria-haspopup="true"
                    aria-expanded={isOpen}
                >
                    <span className="font-bold hidden sm:inline">
                        –ü—Ä–∏–≤–µ—Ç, {user.login}
                    </span>
                    <UserIcon size={18} />
                </button>
                <AnimatePresence>
                    {isOpen && (
                        <motion.div
                            initial={{ opacity: 0, scale: 0.95, y: -10 }}
                            animate={{ opacity: 1, scale: 1, y: 0 }}
                            exit={{ opacity: 0, scale: 0.95, y: -10 }}
                            transition={{ duration: 0.2 }}
                            className="absolute right-0 mt-2 w-56 origin-top-right rounded-2xl bg-white shadow-xl z-50"
                        >
                            <div className="py-2 px-4 border-b border-gray-100">
                                <p className="text-sm font-medium text-gray-900">
                                    {user.name} {user.surname} {user.middlename}
                                </p>
                                <p className="text-xs text-gray-500">
                                    @{user.login}
                                </p>
                            </div>
                            <div className="py-1">
                                <Link
                                    href="/profile"
                                    onClick={handleClose}
                                    className="flex items-center gap-2 w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors"
                                >
                                    <UserIcon size={16} />
                                    <span>–ü—Ä–æ—Ñ–∏–ª—å</span>
                                </Link>
                                <button
                                    onClick={handleLogout}
                                    className="flex items-center gap-2 w-full px-4 py-2 text-sm text-red-600 hover:bg-red-50 transition-colors"
                                >
                                    <LogOut size={16} />
                                    <span>–í—ã–π—Ç–∏</span>
                                </button>
                            </div>
                        </motion.div>
                    )}
                </AnimatePresence>
            </div>
        );
    }

    return (
        <div className="relative inline-block text-left">
            <button
                onClick={() => setIsOpen(!isOpen)}
                className="flex items-center gap-2 px-4 py-2 rounded-full bg-indigo-900 text-white hover:bg-indigo-700 transition-colors transform duration-300"
                aria-haspopup="true"
                aria-expanded={isOpen}
            >
                <span className="font-bold hidden sm:inline">–í–æ–π—Ç–∏</span>
                <ChevronDown size={18} />
            </button>
            <AnimatePresence>
                {isOpen && (
                    <motion.div
                        initial={{ opacity: 0, scale: 0.95, y: -10 }}
                        animate={{ opacity: 1, scale: 1, y: 0 }}
                        exit={{ opacity: 0, scale: 0.95, y: -10 }}
                        transition={{ duration: 0.2 }}
                        className="absolute right-0 mt-2 w-48 origin-top-right rounded-2xl bg-white shadow-xl ring-1 ring-black ring-opacity-5 focus:outline-none z-50"
                    >
                        <div className="py-1">
                            <Link
                                href="/login"
                                onClick={handleClose}
                                className="flex items-center gap-2 w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors"
                            >
                                <UserIcon size={16} />
                                <span>–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</span>
                            </Link>
                            <Link
                                href="/register"
                                onClick={handleClose}
                                className="flex items-center gap-2 w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors"
                            >
                                <UserPlus size={16} />
                                <span>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</span>
                            </Link>
                        </div>
                    </motion.div>
                )}
            </AnimatePresence>
        </div>
    );
};

export default ProfileButton;